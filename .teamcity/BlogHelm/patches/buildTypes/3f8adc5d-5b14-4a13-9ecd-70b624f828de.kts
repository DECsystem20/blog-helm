package BlogHelm.patches.buildTypes

import jetbrains.buildServer.configs.kotlin.v2018_1.*
import jetbrains.buildServer.configs.kotlin.v2018_1.buildSteps.DockerCommandStep
import jetbrains.buildServer.configs.kotlin.v2018_1.buildSteps.dockerCommand
import jetbrains.buildServer.configs.kotlin.v2018_1.buildSteps.exec
import jetbrains.buildServer.configs.kotlin.v2018_1.buildSteps.script
import jetbrains.buildServer.configs.kotlin.v2018_1.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, change the buildType with uuid = '3f8adc5d-5b14-4a13-9ecd-70b624f828de' (id = 'BlogHelm_CommitStage')
accordingly, and delete the patch script.
*/
changeBuildType(uuid("3f8adc5d-5b14-4a13-9ecd-70b624f828de")) {
    expectSteps {
        script {
            name = "Basic diagnostics"
            scriptContent = """
                lsb_release -cdir
                docker version
            """.trimIndent()
        }
        exec {
            name = "Ensure feature branch is ahead of master"
            path = "ci-scripts/merge.sh"
        }
        exec {
            name = "Determine version"
            path = "ci-scripts/version.sh"
        }
        dockerCommand {
            name = "Build CI Image"
            commandType = build {
                source = path {
                    path = "Dockerfile-ci"
                }
                namesAndTags = """
                    blog-helm-ci:%env.IMAGE_TAG%
                    %docker.registry%/blog-helm-ci:%env.IMAGE_TAG%
                """.trimIndent()
            }
        }
        script {
            name = "Run linting and unit tests"
            scriptContent = """
                docker run \
                  --rm -v ${'$'}(pwd)/test-reports:/app/test-reports \
                  blog-helm-ci:%env.IMAGE_TAG% \
                  npm run lint-junit
                
                docker run \
                  --rm -v ${'$'}(pwd)/test-reports:/app/test-reports \
                  blog-helm-ci:%env.IMAGE_TAG% \
                  npm run nyc-junit
                
                docker run \
                  --rm -v ${'$'}(pwd)/test-reports:/app/test-reports \
                  blog-helm-ci:%env.IMAGE_TAG% \
                  chown -R ${'$'}(id -u):${'$'}(id -g) test-reports
            """.trimIndent()
        }
        dockerCommand {
            name = "Build production Docker image"
            commandType = build {
                source = path {
                    path = "Dockerfile"
                }
                namesAndTags = """
                    blog-helm:%env.IMAGE_TAG%
                    %docker.registry%/blog-helm:%env.IMAGE_TAG%
                """.trimIndent()
            }
        }
        script {
            name = "Package Helm Chart"
            scriptContent = """
                helm init --client-only
                helm package --debug \
                  --version %env.IMAGE_TAG% \
                  ./helm/blog-helm
            """.trimIndent()
            dockerImage = "lachlanevenson/k8s-helm:%lachlanevenson.k8s-helm.tag%"
        }
        script {
            name = "Login to Docker registry"
            enabled = false
            scriptContent = "docker login -u %docker.username% -p %docker.password% %docker.server%"
        }
        script {
            name = "Push Docker production image"
            scriptContent = "docker push %docker.registry%/blog-helm:%env.IMAGE_TAG%"
        }
        script {
            name = "Push Docker CI image"
            scriptContent = "docker push %docker.registry%/blog-helm-ci:%env.IMAGE_TAG%"
        }
        script {
            name = "Logout from Docker registry"
            enabled = false
            executionMode = BuildStep.ExecutionMode.ALWAYS
            scriptContent = "docker logout %docker.server%"
        }
    }
    steps {
        update<DockerCommandStep>(3) {
            commandType = build {
                source = path {
                    path = "Dockerfile-ci"
                }
                contextDir = ""
                namesAndTags = """
                    blog-helm-ci:%env.IMAGE_TAG%
                    %docker.registry%blog-helm-ci:%env.IMAGE_TAG%
                """.trimIndent()
                commandArgs = "--pull"
            }
        }
    }
}
