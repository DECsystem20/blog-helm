package BlogHelm.patches.buildTypes

import jetbrains.buildServer.configs.kotlin.v2017_2.*
import jetbrains.buildServer.configs.kotlin.v2017_2.buildSteps.ScriptBuildStep
import jetbrains.buildServer.configs.kotlin.v2017_2.buildSteps.dockerBuild
import jetbrains.buildServer.configs.kotlin.v2017_2.buildSteps.exec
import jetbrains.buildServer.configs.kotlin.v2017_2.buildSteps.script
import jetbrains.buildServer.configs.kotlin.v2017_2.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, change the buildType with uuid = '3f8adc5d-5b14-4a13-9ecd-70b624f828de' (id = 'BlogHelm_CommitStage')
accordingly and delete the patch script.
*/
changeBuildType("3f8adc5d-5b14-4a13-9ecd-70b624f828de") {
    expectSteps {
        script {
            name = "Basic diagnostics"
            scriptContent = "docker version"
        }
        exec {
            name = "Ensure feature branch is ahead of master"
            path = "ci-scripts/merge.sh"
        }
        exec {
            name = "Determine version"
            path = "ci-scripts/version.sh"
        }
        dockerBuild {
            name = "Build CI Image"
            source = path {
                path = "Dockerfile-ci"
            }
            namesAndTags = "blog-helm-ci"
        }
        script {
            name = "Run linting"
            scriptContent = """
                docker run \
                  --rm -v ${'$'}(pwd)/test-reports:/app/test-reports \
                  blog-helm-ci \
                  npm run lint-junit
                
                docker run \
                  --rm -v ${'$'}(pwd)/test-reports:/app/test-reports \
                  blog-helm-ci \
                  chown -R ${'$'}(id -u):${'$'}(id -g) test-reports
            """.trimIndent()
        }
        dockerBuild {
            name = "Build production Docker image"
            source = path {
                path = "Dockerfile"
            }
            namesAndTags = """
                blog-helm:%env.IMAGE_TAG%
                %docker.registry%/blog-helm:%env.IMAGE_TAG%
            """.trimIndent()
        }
        script {
            name = "Package Helm Chart"
            scriptContent = """
                helm init --client-only
                helm package --debug \
                  --version %env.IMAGE_TAG% \
                  ./helm/blog-helm
            """.trimIndent()
            dockerImage = "lachlanevenson/k8s-helm"
        }
        script {
            name = "Push Docker image"
            scriptContent = "docker push %docker.registry%/blog-helm:%env.IMAGE_TAG%"
        }
    }
    steps {
        update<ScriptBuildStep>(0) {
            scriptContent = """
                lsb_release -cdir
                docker version
            """.trimIndent()
        }
    }
}
